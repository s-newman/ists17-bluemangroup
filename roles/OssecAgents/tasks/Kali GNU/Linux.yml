---
- name: Install build stuff
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - gcc
    - libssl-dev
    - make

- name: Do we download
  stat:
    path: /home/deploy/install.sh
  register: downloaded

- name: Download and unpack ossec agent
  unarchive:
    src: https://github.com/ossec/ossec-hids/archive/3.2.0.tar.gz
    dest: /home/deploy
    remote_src: yes
  when: downloaded.stat.exists == false

- name: Install the preloaded-vars.conf
  template:
    src: preloaded-vars.conf
    dest: /home/deploy/ossec-hids-3.1.0/etc/preloaded-vars.conf
    owner: root
    group: root
    mode: 0644

- name: Make system group
  group:
    name: ossec
    system: yes
    state: present

- name: Make system user
  user:
    name: ossec
    group: ossec
    system: yes
    state: present

# Hey don't run this if you don't need to
- name: Do we install
  stat:
    path: /var/ossec/bin/ossec-control
  register: installed

- name: I like installing things
  command: ./install.sh chdir=/home/deploy/ossec-hids-3.1.0
  when: installed.stat.exists == false

- name: Set ossec deploy facts
  set_fact:
    ossec_agent_config_filename: ossec.conf
    ossec_init_name: ossec

# Need to do this not this way
- name: Installing the ossec-agent.conf
  template:
    src: ossec_agent.conf
    dest: /var/ossec/etc/{{ ossec_agent_config_filename }}
    owner: root
    group: root
    mode: 0644

- name: "Check if client.keys exists on ossec-server"
  stat:
    path: /var/ossec/etc/client.keys
  when: ossec_managed_server
  delegate_to: "{{ ossec_fqdn }}"
  register: check_server_keys

- name: "You got broke stuff? I fix"
  shell: "nohup /var/ossec/bin/ossec-authd -p 1515 -n"
  delegate_to: "{{ ossec_fqdn }}"

- name: "register client"
  shell: "/var/ossec/bin/agent-auth -m {{ ossec_ip }} -p 1515 -A '{{ ossec_agent_name|default(ansible_hostname) }}'"

- name: Set permissions on client.keys file
  file:
    dest: /var/ossec/etc/client.keys
    mode: 0640

- name: Get running processes
  shell: "ps -aux | grep -v grep | grep -w ossec-authd | awk '{print $2}'"
  register: running_processes
  delegate_to: "{{ ossec_fqdn }}"

- name: Kill running processes
  shell: "kill {{ item }}"
  with_items: "{{ running_processes.stdout_lines }}"
  delegate_to: "{{ ossec_fqdn }}"

- name: "Restart ossec-remoted on server. If this is the first agent added it will not be running."
  shell: /var/ossec/bin/ossec-control restart
  delegate_to: "{{ ossec_fqdn }}"
  when: ossec_managed_server and not check_server_keys.stat.exists and ossec_fqdn|default("") != ""
  run_once: true

- name: Add serivice file
  copy:
    src: agent/ossec-agent.target
    dest: /etc/systemd/system/ossec-agent.target
    owner: root
    group: root

- name: Add serivice file
  copy:
    src: agent/ossec-agentd.service
    dest: /etc/systemd/system/ossec-agentd.service
    owner: root
    group: root

- name: Add serivice file
  copy:
    src: agent/ossec-execd.service
    dest: /etc/systemd/system/ossec-execd.service
    owner: root
    group: root

- name: Add serivice file
  copy:
    src: agent/ossec-logcollector.service
    dest: /etc/systemd/system/ossec-logcollector.service
    owner: root
    group: root

- name: Add serivice file
  copy:
    src: agent/ossec-syscheckd.service
    dest: /etc/systemd/system/ossec-syschecked.service
    owner: root
    group: root

- name: "Start ossec-agent if not already running"
  service:
    name: "{{ ossec_init_name }}"
    state: started
    enabled: yes